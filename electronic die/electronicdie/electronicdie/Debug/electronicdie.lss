
electronicdie.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000001b6  0000022a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000022c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000008f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00000980  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000054b  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000139  00000000  00000000  00000f4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000397  00000000  00000000  00001084  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000141c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000127  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000242  00000000  00000000  00001567  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 eb       	ldi	r30, 0xB6	; 182
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

int main(void)

{
	int i,y=0;
	DDRD=0x00;
  92:	11 ba       	out	0x11, r1	; 17
	DDRB=0b00111111;
  94:	8f e3       	ldi	r24, 0x3F	; 63
  96:	87 bb       	out	0x17, r24	; 23
    PORTD=0xFF;
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	82 bb       	out	0x12, r24	; 18
    while(1)
    {
		for(i=0;i<6;i++)
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	90 e0       	ldi	r25, 0x00	; 0
		{
			PORTB |=1<<i;
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	50 e0       	ldi	r21, 0x00	; 0
					_delay_ms(1000);
					break;
					case 1:PORTB=0b00000011;
					_delay_ms(1000);
					break;
					case 2:PORTB=0b00000111;
  a4:	0f 2e       	mov	r0, r31
  a6:	f7 e0       	ldi	r31, 0x07	; 7
  a8:	ff 2e       	mov	r15, r31
  aa:	f0 2d       	mov	r31, r0
					_delay_ms(1000);
					break;
					case 3:PORTB=0b00001111;
					_delay_ms(1000);
					break;
					case 4:PORTB=0b00011111;
  ac:	df e1       	ldi	r29, 0x1F	; 31
					_delay_ms(1000);
					break;
					case 2:PORTB=0b00000111;
					_delay_ms(1000);
					break;
					case 3:PORTB=0b00001111;
  ae:	cf e0       	ldi	r28, 0x0F	; 15
					_delay_ms(1000);
					break;
					case 4:PORTB=0b00011111;
					_delay_ms(1000);
					break;
					case 5:PORTB=0b00111111;
  b0:	bf e3       	ldi	r27, 0x3F	; 63
	DDRD=0x00;
	DDRB=0b00111111;
    PORTD=0xFF;
    while(1)
    {
		for(i=0;i<6;i++)
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	70 e0       	ldi	r23, 0x00	; 0
			y=i;
			if((PIND&(1<<0))==0)
			{
				switch(y)
				{
					case 0:PORTB=0b00000001;
  b6:	a1 e0       	ldi	r26, 0x01	; 1
					_delay_ms(1000);
					break;
					case 1:PORTB=0b00000011;
  b8:	0f 2e       	mov	r0, r31
  ba:	f3 e0       	ldi	r31, 0x03	; 3
  bc:	ef 2e       	mov	r14, r31
  be:	f0 2d       	mov	r31, r0
    PORTD=0xFF;
    while(1)
    {
		for(i=0;i<6;i++)
		{
			PORTB |=1<<i;
  c0:	e8 b3       	in	r30, 0x18	; 24
  c2:	9a 01       	movw	r18, r20
  c4:	08 2e       	mov	r0, r24
  c6:	02 c0       	rjmp	.+4      	; 0xcc <main+0x3a>
  c8:	22 0f       	add	r18, r18
  ca:	33 1f       	adc	r19, r19
  cc:	0a 94       	dec	r0
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <main+0x36>
  d0:	2e 2b       	or	r18, r30
  d2:	28 bb       	out	0x18, r18	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d4:	ef e1       	ldi	r30, 0x1F	; 31
  d6:	fe e4       	ldi	r31, 0x4E	; 78
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x46>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x4c>
  de:	00 00       	nop
			_delay_ms(10);
			y=i;
			if((PIND&(1<<0))==0)
  e0:	80 99       	sbic	0x10, 0	; 16
  e2:	5c c0       	rjmp	.+184    	; 0x19c <main+0x10a>
			{
				switch(y)
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	91 05       	cpc	r25, r1
  e8:	59 f1       	breq	.+86     	; 0x140 <main+0xae>
  ea:	83 30       	cpi	r24, 0x03	; 3
  ec:	91 05       	cpc	r25, r1
  ee:	3c f4       	brge	.+14     	; 0xfe <main+0x6c>
  f0:	00 97       	sbiw	r24, 0x00	; 0
  f2:	81 f0       	breq	.+32     	; 0x114 <main+0x82>
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 05       	cpc	r25, r1
  f8:	09 f0       	breq	.+2      	; 0xfc <main+0x6a>
  fa:	50 c0       	rjmp	.+160    	; 0x19c <main+0x10a>
  fc:	16 c0       	rjmp	.+44     	; 0x12a <main+0x98>
  fe:	84 30       	cpi	r24, 0x04	; 4
 100:	91 05       	cpc	r25, r1
 102:	a1 f1       	breq	.+104    	; 0x16c <main+0xda>
 104:	84 30       	cpi	r24, 0x04	; 4
 106:	91 05       	cpc	r25, r1
 108:	34 f1       	brlt	.+76     	; 0x156 <main+0xc4>
 10a:	85 30       	cpi	r24, 0x05	; 5
 10c:	91 05       	cpc	r25, r1
 10e:	09 f0       	breq	.+2      	; 0x112 <main+0x80>
 110:	45 c0       	rjmp	.+138    	; 0x19c <main+0x10a>
 112:	37 c0       	rjmp	.+110    	; 0x182 <main+0xf0>
				{
					case 0:PORTB=0b00000001;
 114:	a8 bb       	out	0x18, r26	; 24
 116:	0f ef       	ldi	r16, 0xFF	; 255
 118:	19 e6       	ldi	r17, 0x69	; 105
 11a:	28 e1       	ldi	r18, 0x18	; 24
 11c:	01 50       	subi	r16, 0x01	; 1
 11e:	10 40       	sbci	r17, 0x00	; 0
 120:	20 40       	sbci	r18, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x8a>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x94>
 126:	00 00       	nop
 128:	41 c0       	rjmp	.+130    	; 0x1ac <main+0x11a>
					_delay_ms(1000);
					break;
					case 1:PORTB=0b00000011;
 12a:	e8 ba       	out	0x18, r14	; 24
 12c:	0f ef       	ldi	r16, 0xFF	; 255
 12e:	19 e6       	ldi	r17, 0x69	; 105
 130:	28 e1       	ldi	r18, 0x18	; 24
 132:	01 50       	subi	r16, 0x01	; 1
 134:	10 40       	sbci	r17, 0x00	; 0
 136:	20 40       	sbci	r18, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0xa0>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xaa>
 13c:	00 00       	nop
 13e:	36 c0       	rjmp	.+108    	; 0x1ac <main+0x11a>
					_delay_ms(1000);
					break;
					case 2:PORTB=0b00000111;
 140:	f8 ba       	out	0x18, r15	; 24
 142:	0f ef       	ldi	r16, 0xFF	; 255
 144:	19 e6       	ldi	r17, 0x69	; 105
 146:	28 e1       	ldi	r18, 0x18	; 24
 148:	01 50       	subi	r16, 0x01	; 1
 14a:	10 40       	sbci	r17, 0x00	; 0
 14c:	20 40       	sbci	r18, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xb6>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xc0>
 152:	00 00       	nop
 154:	2b c0       	rjmp	.+86     	; 0x1ac <main+0x11a>
					_delay_ms(1000);
					break;
					case 3:PORTB=0b00001111;
 156:	c8 bb       	out	0x18, r28	; 24
 158:	0f ef       	ldi	r16, 0xFF	; 255
 15a:	19 e6       	ldi	r17, 0x69	; 105
 15c:	28 e1       	ldi	r18, 0x18	; 24
 15e:	01 50       	subi	r16, 0x01	; 1
 160:	10 40       	sbci	r17, 0x00	; 0
 162:	20 40       	sbci	r18, 0x00	; 0
 164:	e1 f7       	brne	.-8      	; 0x15e <main+0xcc>
 166:	00 c0       	rjmp	.+0      	; 0x168 <main+0xd6>
 168:	00 00       	nop
 16a:	20 c0       	rjmp	.+64     	; 0x1ac <main+0x11a>
					_delay_ms(1000);
					break;
					case 4:PORTB=0b00011111;
 16c:	d8 bb       	out	0x18, r29	; 24
 16e:	0f ef       	ldi	r16, 0xFF	; 255
 170:	19 e6       	ldi	r17, 0x69	; 105
 172:	28 e1       	ldi	r18, 0x18	; 24
 174:	01 50       	subi	r16, 0x01	; 1
 176:	10 40       	sbci	r17, 0x00	; 0
 178:	20 40       	sbci	r18, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <main+0xe2>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <main+0xec>
 17e:	00 00       	nop
 180:	15 c0       	rjmp	.+42     	; 0x1ac <main+0x11a>
					_delay_ms(1000);
					break;
					case 5:PORTB=0b00111111;
 182:	b8 bb       	out	0x18, r27	; 24
 184:	0f ef       	ldi	r16, 0xFF	; 255
 186:	19 e6       	ldi	r17, 0x69	; 105
 188:	28 e1       	ldi	r18, 0x18	; 24
 18a:	01 50       	subi	r16, 0x01	; 1
 18c:	10 40       	sbci	r17, 0x00	; 0
 18e:	20 40       	sbci	r18, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0xf8>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x102>
 194:	00 00       	nop
					_delay_ms(1000);
					break;
				}
				
			}
	PORTB=0x00;
 196:	18 ba       	out	0x18, r1	; 24
	DDRD=0x00;
	DDRB=0b00111111;
    PORTD=0xFF;
    while(1)
    {
		for(i=0;i<6;i++)
 198:	cb 01       	movw	r24, r22
 19a:	92 cf       	rjmp	.-220    	; 0xc0 <main+0x2e>
					_delay_ms(1000);
					break;
				}
				
			}
	PORTB=0x00;
 19c:	18 ba       	out	0x18, r1	; 24
	DDRD=0x00;
	DDRB=0b00111111;
    PORTD=0xFF;
    while(1)
    {
		for(i=0;i<6;i++)
 19e:	01 96       	adiw	r24, 0x01	; 1
 1a0:	86 30       	cpi	r24, 0x06	; 6
 1a2:	91 05       	cpc	r25, r1
 1a4:	0c f4       	brge	.+2      	; 0x1a8 <main+0x116>
 1a6:	8c cf       	rjmp	.-232    	; 0xc0 <main+0x2e>
 1a8:	cb 01       	movw	r24, r22
 1aa:	8a cf       	rjmp	.-236    	; 0xc0 <main+0x2e>
					_delay_ms(1000);
					break;
				}
				
			}
	PORTB=0x00;
 1ac:	18 ba       	out	0x18, r1	; 24
	DDRD=0x00;
	DDRB=0b00111111;
    PORTD=0xFF;
    while(1)
    {
		for(i=0;i<6;i++)
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	87 cf       	rjmp	.-242    	; 0xc0 <main+0x2e>

000001b2 <_exit>:
 1b2:	f8 94       	cli

000001b4 <__stop_program>:
 1b4:	ff cf       	rjmp	.-2      	; 0x1b4 <__stop_program>
