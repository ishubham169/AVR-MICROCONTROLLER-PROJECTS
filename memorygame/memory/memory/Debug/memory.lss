
memory.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000468  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000468  000004dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000004f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000158  00000000  00000000  00000c48  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c3e  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002ba  00000000  00000000  000019de  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007ef  00000000  00000000  00001c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000128  00000000  00000000  00002488  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b1  00000000  00000000  000025b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000029a  00000000  00000000  00002761  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000029fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e6       	ldi	r30, 0x68	; 104
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ac 00 	call	0x158	; 0x158 <main>
  8a:	0c 94 32 02 	jmp	0x464	; 0x464 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <command_enable>:
	PORTB=x&0xf0;command_enable();
	PORTB=(x<<4)&0xf0; command_enable();
}
void command_enable()
{
	PORTB=PORTB&~(1<<0);//rs=0
  92:	c0 98       	cbi	0x18, 0	; 24
	PORTB=PORTB&~(1<<1);//rw=0
  94:	c1 98       	cbi	0x18, 1	; 24
	PORTB=PORTB|(1<<2); //en=1
  96:	c2 9a       	sbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	8f ec       	ldi	r24, 0xCF	; 207
  9a:	97 e0       	ldi	r25, 0x07	; 7
  9c:	01 97       	sbiw	r24, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <command_enable+0xa>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <command_enable+0x10>
  a2:	00 00       	nop
	_delay_ms(1);
	PORTB=PORTB&~(1<<2);//en=0
  a4:	c2 98       	cbi	0x18, 2	; 24
  a6:	8f e9       	ldi	r24, 0x9F	; 159
  a8:	9f e0       	ldi	r25, 0x0F	; 15
  aa:	01 97       	sbiw	r24, 0x01	; 1
  ac:	f1 f7       	brne	.-4      	; 0xaa <command_enable+0x18>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <command_enable+0x1e>
  b0:	00 00       	nop
	_delay_ms(2);
}
  b2:	08 95       	ret

000000b4 <lcd_command>:
	lcd_command(0x28);
	lcd_command(0x0e);

}
void lcd_command(char x)
{
  b4:	cf 93       	push	r28
  b6:	c8 2f       	mov	r28, r24
	PORTB=x&0xf0;command_enable();
  b8:	80 7f       	andi	r24, 0xF0	; 240
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	0e 94 49 00 	call	0x92	; 0x92 <command_enable>
	PORTB=(x<<4)&0xf0; command_enable();
  c0:	8c 2f       	mov	r24, r28
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	82 95       	swap	r24
  c6:	92 95       	swap	r25
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	98 27       	eor	r25, r24
  cc:	80 7f       	andi	r24, 0xF0	; 240
  ce:	98 27       	eor	r25, r24
  d0:	88 bb       	out	0x18, r24	; 24
  d2:	0e 94 49 00 	call	0x92	; 0x92 <command_enable>
}
  d6:	cf 91       	pop	r28
  d8:	08 95       	ret

000000da <lcd_init>:
	
}

void lcd_init()
{
	DDRB=0xFF;
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	87 bb       	out	0x17, r24	; 23

	lcd_command(0x02);
  de:	82 e0       	ldi	r24, 0x02	; 2
  e0:	0e 94 5a 00 	call	0xb4	; 0xb4 <lcd_command>
	lcd_command(0x28);
  e4:	88 e2       	ldi	r24, 0x28	; 40
  e6:	0e 94 5a 00 	call	0xb4	; 0xb4 <lcd_command>
	lcd_command(0x0e);
  ea:	8e e0       	ldi	r24, 0x0E	; 14
  ec:	0e 94 5a 00 	call	0xb4	; 0xb4 <lcd_command>

}
  f0:	08 95       	ret

000000f2 <data_enable>:
	PORTB=x&0xf0; data_enable();
	PORTB=(x<<4)&0xf0; data_enable();
}
void data_enable()
{
	PORTB=PORTB|(1<<0);//rs=1
  f2:	c0 9a       	sbi	0x18, 0	; 24
	PORTB=PORTB&~(1<<1);//rw=0
  f4:	c1 98       	cbi	0x18, 1	; 24
	PORTB=PORTB|(1<<2); //en=1
  f6:	c2 9a       	sbi	0x18, 2	; 24
  f8:	8f ec       	ldi	r24, 0xCF	; 207
  fa:	97 e0       	ldi	r25, 0x07	; 7
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <data_enable+0xa>
 100:	00 c0       	rjmp	.+0      	; 0x102 <data_enable+0x10>
 102:	00 00       	nop
	_delay_ms(1);
	PORTB=PORTB&~(1<<2);//en=0
 104:	c2 98       	cbi	0x18, 2	; 24
 106:	8f e9       	ldi	r24, 0x9F	; 159
 108:	9f e0       	ldi	r25, 0x0F	; 15
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <data_enable+0x18>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <data_enable+0x1e>
 110:	00 00       	nop
	_delay_ms(2);
}
 112:	08 95       	ret

00000114 <lcd_data>:
	PORTB=PORTB&~(1<<2);//en=0
	_delay_ms(2);
}

void lcd_data(char x)//'A'//0x41//01000001
{
 114:	cf 93       	push	r28
 116:	c8 2f       	mov	r28, r24
	PORTB=x&0xf0; data_enable();
 118:	80 7f       	andi	r24, 0xF0	; 240
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	0e 94 79 00 	call	0xf2	; 0xf2 <data_enable>
	PORTB=(x<<4)&0xf0; data_enable();
 120:	8c 2f       	mov	r24, r28
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	82 95       	swap	r24
 126:	92 95       	swap	r25
 128:	90 7f       	andi	r25, 0xF0	; 240
 12a:	98 27       	eor	r25, r24
 12c:	80 7f       	andi	r24, 0xF0	; 240
 12e:	98 27       	eor	r25, r24
 130:	88 bb       	out	0x18, r24	; 24
 132:	0e 94 79 00 	call	0xf2	; 0xf2 <data_enable>
}
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <lcdstring>:
				
      
    }
}
void lcdstring(char *p)
{
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	ec 01       	movw	r28, r24
	while( *p != '\0')
 140:	88 81       	ld	r24, Y
 142:	88 23       	and	r24, r24
 144:	31 f0       	breq	.+12     	; 0x152 <lcdstring+0x18>
		
				
      
    }
}
void lcdstring(char *p)
 146:	21 96       	adiw	r28, 0x01	; 1
{
	while( *p != '\0')
	{
		lcd_data(*p);
 148:	0e 94 8a 00 	call	0x114	; 0x114 <lcd_data>
      
    }
}
void lcdstring(char *p)
{
	while( *p != '\0')
 14c:	89 91       	ld	r24, Y+
 14e:	88 23       	and	r24, r24
 150:	d9 f7       	brne	.-10     	; 0x148 <lcdstring+0xe>
	{
		lcd_data(*p);
		p++;
	}
	
}
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	08 95       	ret

00000158 <main>:
void lcd_data(char );
void data_enable();
void lcdstring(char *);
int main(void)
{
	DDRC=0b00001111;
 158:	8f e0       	ldi	r24, 0x0F	; 15
 15a:	84 bb       	out	0x14, r24	; 20
	PORTC=0x00;
 15c:	15 ba       	out	0x15, r1	; 21
	DDRD=0xFF;
 15e:	8f ef       	ldi	r24, 0xFF	; 255
 160:	81 bb       	out	0x11, r24	; 17
	PORTD=0xFF;
 162:	82 bb       	out	0x12, r24	; 18
	lcd_init();
 164:	0e 94 6d 00 	call	0xda	; 0xda <lcd_init>
	lcdstring("hiii shubham");
 168:	80 e6       	ldi	r24, 0x60	; 96
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 9d 00 	call	0x13a	; 0x13a <lcdstring>
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	30 e7       	ldi	r19, 0x70	; 112
 174:	42 e0       	ldi	r20, 0x02	; 2
 176:	21 50       	subi	r18, 0x01	; 1
 178:	30 40       	sbci	r19, 0x00	; 0
 17a:	40 40       	sbci	r20, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <main+0x1e>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x28>
 180:	00 00       	nop
	_delay_ms(100);
	lcd_command(0x01);
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	0e 94 5a 00 	call	0xb4	; 0xb4 <lcd_command>
    while(1)
    {
		int o=rand()%3+1;
 188:	03 e0       	ldi	r16, 0x03	; 3
 18a:	10 e0       	ldi	r17, 0x00	; 0
		PORTC=PORTC|(1<<o);
 18c:	c1 e0       	ldi	r28, 0x01	; 1
 18e:	d0 e0       	ldi	r29, 0x00	; 0
	lcdstring("hiii shubham");
	_delay_ms(100);
	lcd_command(0x01);
    while(1)
    {
		int o=rand()%3+1;
 190:	0e 94 c6 01 	call	0x38c	; 0x38c <rand>
		PORTC=PORTC|(1<<o);
 194:	25 b3       	in	r18, 0x15	; 21
	lcdstring("hiii shubham");
	_delay_ms(100);
	lcd_command(0x01);
    while(1)
    {
		int o=rand()%3+1;
 196:	b8 01       	movw	r22, r16
 198:	0e 94 4a 01 	call	0x294	; 0x294 <__divmodhi4>
 19c:	01 96       	adiw	r24, 0x01	; 1
		PORTC=PORTC|(1<<o);
 19e:	ae 01       	movw	r20, r28
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <main+0x4e>
 1a2:	44 0f       	add	r20, r20
 1a4:	55 1f       	adc	r21, r21
 1a6:	8a 95       	dec	r24
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <main+0x4a>
 1aa:	ca 01       	movw	r24, r20
 1ac:	24 2b       	or	r18, r20
 1ae:	25 bb       	out	0x15, r18	; 21
 1b0:	2f ef       	ldi	r18, 0xFF	; 255
 1b2:	34 e3       	ldi	r19, 0x34	; 52
 1b4:	4c e0       	ldi	r20, 0x0C	; 12
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	30 40       	sbci	r19, 0x00	; 0
 1ba:	40 40       	sbci	r20, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <main+0x5e>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x68>
 1c0:	00 00       	nop
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
 1c2:	95 b3       	in	r25, 0x15	; 21
 1c4:	80 95       	com	r24
 1c6:	89 23       	and	r24, r25
 1c8:	85 bb       	out	0x15, r24	; 21
		o=rand()%3+1;
 1ca:	0e 94 c6 01 	call	0x38c	; 0x38c <rand>
		PORTC=PORTC|(1<<o);
 1ce:	25 b3       	in	r18, 0x15	; 21
    {
		int o=rand()%3+1;
		PORTC=PORTC|(1<<o);
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
		o=rand()%3+1;
 1d0:	b8 01       	movw	r22, r16
 1d2:	0e 94 4a 01 	call	0x294	; 0x294 <__divmodhi4>
 1d6:	01 96       	adiw	r24, 0x01	; 1
		PORTC=PORTC|(1<<o);
 1d8:	ae 01       	movw	r20, r28
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <main+0x88>
 1dc:	44 0f       	add	r20, r20
 1de:	55 1f       	adc	r21, r21
 1e0:	8a 95       	dec	r24
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <main+0x84>
 1e4:	ca 01       	movw	r24, r20
 1e6:	24 2b       	or	r18, r20
 1e8:	25 bb       	out	0x15, r18	; 21
 1ea:	2f ef       	ldi	r18, 0xFF	; 255
 1ec:	34 e3       	ldi	r19, 0x34	; 52
 1ee:	4c e0       	ldi	r20, 0x0C	; 12
 1f0:	21 50       	subi	r18, 0x01	; 1
 1f2:	30 40       	sbci	r19, 0x00	; 0
 1f4:	40 40       	sbci	r20, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x98>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0xa2>
 1fa:	00 00       	nop
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
 1fc:	95 b3       	in	r25, 0x15	; 21
 1fe:	80 95       	com	r24
 200:	89 23       	and	r24, r25
 202:	85 bb       	out	0x15, r24	; 21
		o=rand()%3+1;
 204:	0e 94 c6 01 	call	0x38c	; 0x38c <rand>
		PORTC=PORTC|(1<<o);
 208:	25 b3       	in	r18, 0x15	; 21
		PORTC=PORTC&~(1<<o);
		o=rand()%3+1;
		PORTC=PORTC|(1<<o);
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
		o=rand()%3+1;
 20a:	b8 01       	movw	r22, r16
 20c:	0e 94 4a 01 	call	0x294	; 0x294 <__divmodhi4>
 210:	01 96       	adiw	r24, 0x01	; 1
		PORTC=PORTC|(1<<o);
 212:	ae 01       	movw	r20, r28
 214:	02 c0       	rjmp	.+4      	; 0x21a <main+0xc2>
 216:	44 0f       	add	r20, r20
 218:	55 1f       	adc	r21, r21
 21a:	8a 95       	dec	r24
 21c:	e2 f7       	brpl	.-8      	; 0x216 <main+0xbe>
 21e:	ca 01       	movw	r24, r20
 220:	24 2b       	or	r18, r20
 222:	25 bb       	out	0x15, r18	; 21
 224:	2f ef       	ldi	r18, 0xFF	; 255
 226:	34 e3       	ldi	r19, 0x34	; 52
 228:	4c e0       	ldi	r20, 0x0C	; 12
 22a:	21 50       	subi	r18, 0x01	; 1
 22c:	30 40       	sbci	r19, 0x00	; 0
 22e:	40 40       	sbci	r20, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <main+0xd2>
 232:	00 c0       	rjmp	.+0      	; 0x234 <main+0xdc>
 234:	00 00       	nop
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
 236:	95 b3       	in	r25, 0x15	; 21
 238:	80 95       	com	r24
 23a:	89 23       	and	r24, r25
 23c:	85 bb       	out	0x15, r24	; 21
		o=rand()%3+1;
 23e:	0e 94 c6 01 	call	0x38c	; 0x38c <rand>
		PORTC=PORTC|(1<<o);
 242:	25 b3       	in	r18, 0x15	; 21
		PORTC=PORTC&~(1<<o);
		o=rand()%3+1;
		PORTC=PORTC|(1<<o);
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
		o=rand()%3+1;
 244:	b8 01       	movw	r22, r16
 246:	0e 94 4a 01 	call	0x294	; 0x294 <__divmodhi4>
 24a:	01 96       	adiw	r24, 0x01	; 1
		PORTC=PORTC|(1<<o);
 24c:	ae 01       	movw	r20, r28
 24e:	02 c0       	rjmp	.+4      	; 0x254 <main+0xfc>
 250:	44 0f       	add	r20, r20
 252:	55 1f       	adc	r21, r21
 254:	8a 95       	dec	r24
 256:	e2 f7       	brpl	.-8      	; 0x250 <main+0xf8>
 258:	ca 01       	movw	r24, r20
 25a:	24 2b       	or	r18, r20
 25c:	25 bb       	out	0x15, r18	; 21
 25e:	2f ef       	ldi	r18, 0xFF	; 255
 260:	34 e3       	ldi	r19, 0x34	; 52
 262:	4c e0       	ldi	r20, 0x0C	; 12
 264:	21 50       	subi	r18, 0x01	; 1
 266:	30 40       	sbci	r19, 0x00	; 0
 268:	40 40       	sbci	r20, 0x00	; 0
 26a:	e1 f7       	brne	.-8      	; 0x264 <main+0x10c>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <main+0x116>
 26e:	00 00       	nop
		_delay_ms(500);
		PORTC=PORTC&~(1<<o);
 270:	95 b3       	in	r25, 0x15	; 21
 272:	80 95       	com	r24
 274:	89 23       	and	r24, r25
 276:	85 bb       	out	0x15, r24	; 21
		PORTC=PORTC|(0x0f);
 278:	85 b3       	in	r24, 0x15	; 21
 27a:	8f 60       	ori	r24, 0x0F	; 15
 27c:	85 bb       	out	0x15, r24	; 21
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	99 e6       	ldi	r25, 0x69	; 105
 282:	a8 e1       	ldi	r26, 0x18	; 24
 284:	81 50       	subi	r24, 0x01	; 1
 286:	90 40       	sbci	r25, 0x00	; 0
 288:	a0 40       	sbci	r26, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x12c>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x136>
 28e:	00 00       	nop
		_delay_ms(1000);
		PORTC=0x00;
 290:	15 ba       	out	0x15, r1	; 21
 292:	7e cf       	rjmp	.-260    	; 0x190 <main+0x38>

00000294 <__divmodhi4>:
 294:	97 fb       	bst	r25, 7
 296:	09 2e       	mov	r0, r25
 298:	07 26       	eor	r0, r23
 29a:	0a d0       	rcall	.+20     	; 0x2b0 <__divmodhi4_neg1>
 29c:	77 fd       	sbrc	r23, 7
 29e:	04 d0       	rcall	.+8      	; 0x2a8 <__divmodhi4_neg2>
 2a0:	0c d0       	rcall	.+24     	; 0x2ba <__udivmodhi4>
 2a2:	06 d0       	rcall	.+12     	; 0x2b0 <__divmodhi4_neg1>
 2a4:	00 20       	and	r0, r0
 2a6:	1a f4       	brpl	.+6      	; 0x2ae <__divmodhi4_exit>

000002a8 <__divmodhi4_neg2>:
 2a8:	70 95       	com	r23
 2aa:	61 95       	neg	r22
 2ac:	7f 4f       	sbci	r23, 0xFF	; 255

000002ae <__divmodhi4_exit>:
 2ae:	08 95       	ret

000002b0 <__divmodhi4_neg1>:
 2b0:	f6 f7       	brtc	.-4      	; 0x2ae <__divmodhi4_exit>
 2b2:	90 95       	com	r25
 2b4:	81 95       	neg	r24
 2b6:	9f 4f       	sbci	r25, 0xFF	; 255
 2b8:	08 95       	ret

000002ba <__udivmodhi4>:
 2ba:	aa 1b       	sub	r26, r26
 2bc:	bb 1b       	sub	r27, r27
 2be:	51 e1       	ldi	r21, 0x11	; 17
 2c0:	07 c0       	rjmp	.+14     	; 0x2d0 <__udivmodhi4_ep>

000002c2 <__udivmodhi4_loop>:
 2c2:	aa 1f       	adc	r26, r26
 2c4:	bb 1f       	adc	r27, r27
 2c6:	a6 17       	cp	r26, r22
 2c8:	b7 07       	cpc	r27, r23
 2ca:	10 f0       	brcs	.+4      	; 0x2d0 <__udivmodhi4_ep>
 2cc:	a6 1b       	sub	r26, r22
 2ce:	b7 0b       	sbc	r27, r23

000002d0 <__udivmodhi4_ep>:
 2d0:	88 1f       	adc	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	5a 95       	dec	r21
 2d6:	a9 f7       	brne	.-22     	; 0x2c2 <__udivmodhi4_loop>
 2d8:	80 95       	com	r24
 2da:	90 95       	com	r25
 2dc:	bc 01       	movw	r22, r24
 2de:	cd 01       	movw	r24, r26
 2e0:	08 95       	ret

000002e2 <do_rand>:
 2e2:	8f 92       	push	r8
 2e4:	9f 92       	push	r9
 2e6:	af 92       	push	r10
 2e8:	bf 92       	push	r11
 2ea:	cf 92       	push	r12
 2ec:	df 92       	push	r13
 2ee:	ef 92       	push	r14
 2f0:	ff 92       	push	r15
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	ec 01       	movw	r28, r24
 2f8:	88 81       	ld	r24, Y
 2fa:	99 81       	ldd	r25, Y+1	; 0x01
 2fc:	aa 81       	ldd	r26, Y+2	; 0x02
 2fe:	bb 81       	ldd	r27, Y+3	; 0x03
 300:	00 97       	sbiw	r24, 0x00	; 0
 302:	a1 05       	cpc	r26, r1
 304:	b1 05       	cpc	r27, r1
 306:	21 f4       	brne	.+8      	; 0x310 <do_rand+0x2e>
 308:	84 e2       	ldi	r24, 0x24	; 36
 30a:	99 ed       	ldi	r25, 0xD9	; 217
 30c:	ab e5       	ldi	r26, 0x5B	; 91
 30e:	b7 e0       	ldi	r27, 0x07	; 7
 310:	bc 01       	movw	r22, r24
 312:	cd 01       	movw	r24, r26
 314:	2d e1       	ldi	r18, 0x1D	; 29
 316:	33 ef       	ldi	r19, 0xF3	; 243
 318:	41 e0       	ldi	r20, 0x01	; 1
 31a:	50 e0       	ldi	r21, 0x00	; 0
 31c:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__divmodsi4>
 320:	49 01       	movw	r8, r18
 322:	5a 01       	movw	r10, r20
 324:	27 ea       	ldi	r18, 0xA7	; 167
 326:	31 e4       	ldi	r19, 0x41	; 65
 328:	40 e0       	ldi	r20, 0x00	; 0
 32a:	50 e0       	ldi	r21, 0x00	; 0
 32c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__mulsi3>
 330:	6b 01       	movw	r12, r22
 332:	7c 01       	movw	r14, r24
 334:	c5 01       	movw	r24, r10
 336:	b4 01       	movw	r22, r8
 338:	2c ee       	ldi	r18, 0xEC	; 236
 33a:	34 ef       	ldi	r19, 0xF4	; 244
 33c:	4f ef       	ldi	r20, 0xFF	; 255
 33e:	5f ef       	ldi	r21, 0xFF	; 255
 340:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__mulsi3>
 344:	dc 01       	movw	r26, r24
 346:	cb 01       	movw	r24, r22
 348:	c8 0e       	add	r12, r24
 34a:	d9 1e       	adc	r13, r25
 34c:	ea 1e       	adc	r14, r26
 34e:	fb 1e       	adc	r15, r27
 350:	f7 fe       	sbrs	r15, 7
 352:	08 c0       	rjmp	.+16     	; 0x364 <do_rand+0x82>
 354:	8f ef       	ldi	r24, 0xFF	; 255
 356:	9f ef       	ldi	r25, 0xFF	; 255
 358:	af ef       	ldi	r26, 0xFF	; 255
 35a:	bf e7       	ldi	r27, 0x7F	; 127
 35c:	c8 0e       	add	r12, r24
 35e:	d9 1e       	adc	r13, r25
 360:	ea 1e       	adc	r14, r26
 362:	fb 1e       	adc	r15, r27
 364:	c8 82       	st	Y, r12
 366:	d9 82       	std	Y+1, r13	; 0x01
 368:	ea 82       	std	Y+2, r14	; 0x02
 36a:	fb 82       	std	Y+3, r15	; 0x03
 36c:	c6 01       	movw	r24, r12
 36e:	9f 77       	andi	r25, 0x7F	; 127
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	ff 90       	pop	r15
 376:	ef 90       	pop	r14
 378:	df 90       	pop	r13
 37a:	cf 90       	pop	r12
 37c:	bf 90       	pop	r11
 37e:	af 90       	pop	r10
 380:	9f 90       	pop	r9
 382:	8f 90       	pop	r8
 384:	08 95       	ret

00000386 <rand_r>:
 386:	0e 94 71 01 	call	0x2e2	; 0x2e2 <do_rand>
 38a:	08 95       	ret

0000038c <rand>:
 38c:	8d e6       	ldi	r24, 0x6D	; 109
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 71 01 	call	0x2e2	; 0x2e2 <do_rand>
 394:	08 95       	ret

00000396 <srand>:
 396:	a0 e0       	ldi	r26, 0x00	; 0
 398:	b0 e0       	ldi	r27, 0x00	; 0
 39a:	80 93 6d 00 	sts	0x006D, r24
 39e:	90 93 6e 00 	sts	0x006E, r25
 3a2:	a0 93 6f 00 	sts	0x006F, r26
 3a6:	b0 93 70 00 	sts	0x0070, r27
 3aa:	08 95       	ret

000003ac <__mulsi3>:
 3ac:	62 9f       	mul	r22, r18
 3ae:	d0 01       	movw	r26, r0
 3b0:	73 9f       	mul	r23, r19
 3b2:	f0 01       	movw	r30, r0
 3b4:	82 9f       	mul	r24, r18
 3b6:	e0 0d       	add	r30, r0
 3b8:	f1 1d       	adc	r31, r1
 3ba:	64 9f       	mul	r22, r20
 3bc:	e0 0d       	add	r30, r0
 3be:	f1 1d       	adc	r31, r1
 3c0:	92 9f       	mul	r25, r18
 3c2:	f0 0d       	add	r31, r0
 3c4:	83 9f       	mul	r24, r19
 3c6:	f0 0d       	add	r31, r0
 3c8:	74 9f       	mul	r23, r20
 3ca:	f0 0d       	add	r31, r0
 3cc:	65 9f       	mul	r22, r21
 3ce:	f0 0d       	add	r31, r0
 3d0:	99 27       	eor	r25, r25
 3d2:	72 9f       	mul	r23, r18
 3d4:	b0 0d       	add	r27, r0
 3d6:	e1 1d       	adc	r30, r1
 3d8:	f9 1f       	adc	r31, r25
 3da:	63 9f       	mul	r22, r19
 3dc:	b0 0d       	add	r27, r0
 3de:	e1 1d       	adc	r30, r1
 3e0:	f9 1f       	adc	r31, r25
 3e2:	bd 01       	movw	r22, r26
 3e4:	cf 01       	movw	r24, r30
 3e6:	11 24       	eor	r1, r1
 3e8:	08 95       	ret

000003ea <__divmodsi4>:
 3ea:	97 fb       	bst	r25, 7
 3ec:	09 2e       	mov	r0, r25
 3ee:	05 26       	eor	r0, r21
 3f0:	0e d0       	rcall	.+28     	; 0x40e <__divmodsi4_neg1>
 3f2:	57 fd       	sbrc	r21, 7
 3f4:	04 d0       	rcall	.+8      	; 0x3fe <__divmodsi4_neg2>
 3f6:	14 d0       	rcall	.+40     	; 0x420 <__udivmodsi4>
 3f8:	0a d0       	rcall	.+20     	; 0x40e <__divmodsi4_neg1>
 3fa:	00 1c       	adc	r0, r0
 3fc:	38 f4       	brcc	.+14     	; 0x40c <__divmodsi4_exit>

000003fe <__divmodsi4_neg2>:
 3fe:	50 95       	com	r21
 400:	40 95       	com	r20
 402:	30 95       	com	r19
 404:	21 95       	neg	r18
 406:	3f 4f       	sbci	r19, 0xFF	; 255
 408:	4f 4f       	sbci	r20, 0xFF	; 255
 40a:	5f 4f       	sbci	r21, 0xFF	; 255

0000040c <__divmodsi4_exit>:
 40c:	08 95       	ret

0000040e <__divmodsi4_neg1>:
 40e:	f6 f7       	brtc	.-4      	; 0x40c <__divmodsi4_exit>
 410:	90 95       	com	r25
 412:	80 95       	com	r24
 414:	70 95       	com	r23
 416:	61 95       	neg	r22
 418:	7f 4f       	sbci	r23, 0xFF	; 255
 41a:	8f 4f       	sbci	r24, 0xFF	; 255
 41c:	9f 4f       	sbci	r25, 0xFF	; 255
 41e:	08 95       	ret

00000420 <__udivmodsi4>:
 420:	a1 e2       	ldi	r26, 0x21	; 33
 422:	1a 2e       	mov	r1, r26
 424:	aa 1b       	sub	r26, r26
 426:	bb 1b       	sub	r27, r27
 428:	fd 01       	movw	r30, r26
 42a:	0d c0       	rjmp	.+26     	; 0x446 <__udivmodsi4_ep>

0000042c <__udivmodsi4_loop>:
 42c:	aa 1f       	adc	r26, r26
 42e:	bb 1f       	adc	r27, r27
 430:	ee 1f       	adc	r30, r30
 432:	ff 1f       	adc	r31, r31
 434:	a2 17       	cp	r26, r18
 436:	b3 07       	cpc	r27, r19
 438:	e4 07       	cpc	r30, r20
 43a:	f5 07       	cpc	r31, r21
 43c:	20 f0       	brcs	.+8      	; 0x446 <__udivmodsi4_ep>
 43e:	a2 1b       	sub	r26, r18
 440:	b3 0b       	sbc	r27, r19
 442:	e4 0b       	sbc	r30, r20
 444:	f5 0b       	sbc	r31, r21

00000446 <__udivmodsi4_ep>:
 446:	66 1f       	adc	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	88 1f       	adc	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	1a 94       	dec	r1
 450:	69 f7       	brne	.-38     	; 0x42c <__udivmodsi4_loop>
 452:	60 95       	com	r22
 454:	70 95       	com	r23
 456:	80 95       	com	r24
 458:	90 95       	com	r25
 45a:	9b 01       	movw	r18, r22
 45c:	ac 01       	movw	r20, r24
 45e:	bd 01       	movw	r22, r26
 460:	cf 01       	movw	r24, r30
 462:	08 95       	ret

00000464 <_exit>:
 464:	f8 94       	cli

00000466 <__stop_program>:
 466:	ff cf       	rjmp	.-2      	; 0x466 <__stop_program>
